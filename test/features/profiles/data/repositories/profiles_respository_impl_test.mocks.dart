// Mocks generated by Mockito 5.4.1 from annotations
// in griot_app/test/features/profiles/data/repositories/profiles_remote_respository_impl_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:griot_app/core/network/network_info.dart' as _i5;
import 'package:griot_app/profile/data/data_sources/profiles_remote_data_source.dart'
    as _i3;
import 'package:griot_app/profile/domain/entities/profile.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProfile_0 extends _i1.SmartFake implements _i2.Profile {
  _FakeProfile_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfilesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfilesRemoteDataSource extends _i1.Mock
    implements _i3.ProfilesRemoteDataSource {
  MockProfilesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Profile> performGetProfileDetails() => (super.noSuchMethod(
        Invocation.method(
          #performGetProfileDetails,
          [],
        ),
        returnValue: _i4.Future<_i2.Profile>.value(_FakeProfile_0(
          this,
          Invocation.method(
            #performGetProfileDetails,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Profile>);
  @override
  _i4.Future<_i2.Profile> performUpdateProfileDetails({
    String? profilePicture,
    String? name,
    String? middleName,
    String? lastName,
    DateTime? birthDate,
    String? gender,
    String? language,
    String? timeZone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #performUpdateProfileDetails,
          [],
          {
            #profilePicture: profilePicture,
            #name: name,
            #middleName: middleName,
            #lastName: lastName,
            #birthDate: birthDate,
            #gender: gender,
            #language: language,
            #timeZone: timeZone,
          },
        ),
        returnValue: _i4.Future<_i2.Profile>.value(_FakeProfile_0(
          this,
          Invocation.method(
            #performUpdateProfileDetails,
            [],
            {
              #profilePicture: profilePicture,
              #name: name,
              #middleName: middleName,
              #lastName: lastName,
              #birthDate: birthDate,
              #gender: gender,
              #language: language,
              #timeZone: timeZone,
            },
          ),
        )),
      ) as _i4.Future<_i2.Profile>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
